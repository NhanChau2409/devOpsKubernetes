name: Deploy theProject

on:
  push:
    branches: [ master, main, develop, feature/*, hotfix/* ]
    paths:
      - 'theProject/**'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }}
  GKE_CLUSTER: dwk-cluster
  GKE_ZONE: europe-north1-b
  REGISTRY: gcr.io
  REPOSITORY: influential-rex-464619-p8
  IMAGE: the-project
  SERVICE: the-project
  BRANCH: ${{ github.ref_name }}

jobs:
  build-publish-deploy:
    name: Build, Publish and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: 'Set up Cloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GKE_SA_KEY }}'

      - name: 'Use gcloud CLI'
        run: gcloud info

      - name: 'Get GKE credentials'
        uses: 'google-github-actions/get-gke-credentials@v2'
        with:
          cluster_name: '${{ env.GKE_CLUSTER }}'
          project_id: '${{ env.PROJECT_ID }}'
          location: '${{ env.GKE_ZONE }}'

      - name: 'Set up Docker Buildx'
        run: gcloud auth configure-docker
  
      - name: 'Form the image name'
        run: echo "IMAGE_TAG=$REGISTRY/$PROJECT_ID/$REPOSITORY/$IMAGE:$BRANCH-$GITHUB_SHA" >> $GITHUB_ENV

      - name: 'Build Docker image'
        run: |
          cd theProject
          docker build --tag $IMAGE_TAG .

      - name: 'Push Docker image'
        run: docker push $IMAGE_TAG

      - name: 'Set up Kustomize'
        uses: imranismail/setup-kustomize@v2.1.0

      - name: 'Determine namespace'
        run: |
          if [[ "$BRANCH" == "master" || "$BRANCH" == "main" ]]; then
            echo "NAMESPACE=project" >> $GITHUB_ENV
            echo "SERVICE_NAME=the-project" >> $GITHUB_ENV
          else
            # Convert branch name to valid namespace name (lowercase, replace / with -)
            NAMESPACE=$(echo "$BRANCH" | tr '[:upper:]' '[:lower:]' | sed 's/[^a-z0-9-]/-/g' | sed 's/-\+/-/g' | sed 's/^-\|-$//g')
            echo "NAMESPACE=$NAMESPACE" >> $GITHUB_ENV
            echo "SERVICE_NAME=the-project-$NAMESPACE" >> $GITHUB_ENV
          fi

      - name: 'Create namespace if not exists'
        run: |
          kubectl create namespace $NAMESPACE --dry-run=client -o yaml | kubectl apply -f -

      - name: 'Deploy'
        run: |-
          cd theProject
          kustomize edit set image PROJECT/IMAGE=$IMAGE_TAG
          kustomize edit set namespace $NAMESPACE
          kustomize edit set nameprefix $SERVICE_NAME-
          kustomize build . | kubectl apply -f -
          kubectl rollout status deployment $SERVICE_NAME-the-project -n $NAMESPACE
          kubectl get services -n $NAMESPACE -o wide
